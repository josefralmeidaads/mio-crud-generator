import React, { useState, useEffect } from 'react'

import { Grid } from '@material-ui/core'
import { ActionDialog } from 'mio-library-ui'
import { DropDownSpedEntidade } from '~/components'
import api from '~/services/api-contabil'
import useNotification from '~/hooks/useNotification'
import SpedLacsTransporter from './components/SpedLacsTransporter'

const Form = (props) => {
  const notification = useNotification()
  const { isOpen, onClose, data, onAfterFormSubmit } = props
  const [_data, setData] = useState()

  useEffect(() => {
    setData(data)
  }, [data])

  const handleClickItem = async (event, value) => {
    const insertableData = {
      pContaId: _data.pContaId,
      spedEntidadeId: _data.spedEntidadeId,
      spedLacsId: value,
    }

    try {
      const response = await api.post('PContaLacs', insertableData)
      onAfterFormSubmit(response.data.data)
      notification.post()
    } catch (err) {
      let msg = 'Não foi possível processar a requisição'

      const { response } = err

      if (response) {
        msg = response.data.errors[0]
      }
      notification.error(msg)
    }
  }

  return (
    <ActionDialog
      title="Cadastro de CSLL/LACS PARTE A"
      isOpen={isOpen}
      onClose={onClose}
      onCancelClick={onClose}
      okLabel="Salvar"
      customActions={true}
      dialogProps={{
        maxWidth: 'lg',
      }}
    >
      <Grid container spacing={2}>
        <Grid xl={12} lg={12} md={112} sm={12} xs={12} item>
          <DropDownSpedEntidade
            value={_data?.spedEntidadeId || null}
            onChange={(e) => {
              const spedEntidadeId = e.target.value
              setData((state) => ({
                ...state,
                spedEntidadeId,
              }))
            }}
          />
        </Grid>

        <Grid xl={12} lg={12} mg={12} sm={12} xs={12} item>
          <SpedLacsTransporter
            spedEntidadeId={_data?.spedEntidadeId}
            onItemClick={handleClickItem}
          />
        </Grid>
      </Grid>
    </ActionDialog>
  )
}

export default Form
